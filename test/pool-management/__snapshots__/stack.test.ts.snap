// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Pool management stack matches snapshot 1`] = `
Object {
  "Outputs": Object {
    "testresultprocessingstatemachinearn": Object {
      "Value": Object {
        "Ref": "testresultprocessingprocesstestresult047831EC",
      },
    },
  },
  "Parameters": Object {
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24ArtifactHashBA91B77F": Object {
      "Description": "Artifact hash for asset \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3Bucket4D46ABB5": Object {
      "Description": "S3 bucket for asset \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861": Object {
      "Description": "S3 key for asset version \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParameterse687e32ef3966bde3f1c811d7697d790ba796f7b862b3d3aeab74bfa10ec73b9ArtifactHashE4C864DC": Object {
      "Description": "Artifact hash for asset \\"e687e32ef3966bde3f1c811d7697d790ba796f7b862b3d3aeab74bfa10ec73b9\\"",
      "Type": "String",
    },
    "AssetParameterse687e32ef3966bde3f1c811d7697d790ba796f7b862b3d3aeab74bfa10ec73b9S3Bucket2762AFD3": Object {
      "Description": "S3 bucket for asset \\"e687e32ef3966bde3f1c811d7697d790ba796f7b862b3d3aeab74bfa10ec73b9\\"",
      "Type": "String",
    },
    "AssetParameterse687e32ef3966bde3f1c811d7697d790ba796f7b862b3d3aeab74bfa10ec73b9S3VersionKey3B7344ED": Object {
      "Description": "S3 key for asset version \\"e687e32ef3966bde3f1c811d7697d790ba796f7b862b3d3aeab74bfa10ec73b9\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3Bucket4D46ABB5",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "activitylog4548CCD2": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "tenant",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "dateTime",
            "AttributeType": "S",
          },
        ],
        "KeySchema": Array [
          Object {
            "AttributeName": "tenant",
            "KeyType": "HASH",
          },
          Object {
            "AttributeName": "dateTime",
            "KeyType": "RANGE",
          },
        ],
        "ProvisionedThroughput": Object {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "testpool476DCF5C": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "tenant",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "poolName",
            "AttributeType": "S",
          },
        ],
        "KeySchema": Array [
          Object {
            "AttributeName": "tenant",
            "KeyType": "HASH",
          },
          Object {
            "AttributeName": "poolName",
            "KeyType": "RANGE",
          },
        ],
        "ProvisionedThroughput": Object {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5,
        },
        "StreamSpecification": Object {
          "StreamViewType": "NEW_AND_OLD_IMAGES",
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "testresultprocessingforwardtestresultfunctionCD28DA83": Object {
      "DependsOn": Array [
        "testresultprocessingforwardtestresultfunctionServiceRoleDefaultPolicyAF6E3F40",
        "testresultprocessingforwardtestresultfunctionServiceRole05EEA4BD",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameterse687e32ef3966bde3f1c811d7697d790ba796f7b862b3d3aeab74bfa10ec73b9S3Bucket2762AFD3",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterse687e32ef3966bde3f1c811d7697d790ba796f7b862b3d3aeab74bfa10ec73b9S3VersionKey3B7344ED",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterse687e32ef3966bde3f1c811d7697d790ba796f7b862b3d3aeab74bfa10ec73b9S3VersionKey3B7344ED",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "testresultprocessingforwardtestresultfunctionServiceRole05EEA4BD",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "testresultprocessingforwardtestresultfunctionLogRetentionE492D9E8": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "testresultprocessingforwardtestresultfunctionCD28DA83",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "testresultprocessingforwardtestresultfunctionServiceRole05EEA4BD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testresultprocessingforwardtestresultfunctionServiceRoleDefaultPolicyAF6E3F40": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "mobiletargeting:CreateCampaign",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testresultprocessingforwardtestresultfunctionServiceRoleDefaultPolicyAF6E3F40",
        "Roles": Array [
          Object {
            "Ref": "testresultprocessingforwardtestresultfunctionServiceRole05EEA4BD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testresultprocessingprocesstestresult047831EC": Object {
      "DependsOn": Array [
        "testresultprocessingprocesstestresultRoleDefaultPolicy7E3A9E8E",
        "testresultprocessingprocesstestresultRoleC4E204A9",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"get-pool\\",\\"States\\":{\\"get-pool\\":{\\"Next\\":\\"check-pool-exists\\",\\"Type\\":\\"Task\\",\\"ResultPath\\":\\"$.pool\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:getItem\\",\\"Parameters\\":{\\"Key\\":{\\"tenant\\":{\\"S.$\\":\\"$.tenant\\"},\\"poolName\\":{\\"S.$\\":\\"$.poolName\\"}},\\"TableName\\":\\"",
              Object {
                "Ref": "testpool476DCF5C",
              },
              "\\",\\"ConsistentRead\\":false}},\\"check-pool-exists\\":{\\"Type\\":\\"Choice\\",\\"Choices\\":[{\\"Variable\\":\\"$.pool.Item\\",\\"IsPresent\\":false,\\"Next\\":\\"pool-not-found\\"},{\\"Variable\\":\\"$.pool.Item\\",\\"IsPresent\\":true,\\"Next\\":\\"check-test-result-is-positive\\"}]},\\"pool-not-found\\":{\\"Type\\":\\"Fail\\",\\"Error\\":\\"pool-not-found\\"},\\"check-test-result-is-positive\\":{\\"Type\\":\\"Choice\\",\\"Choices\\":[{\\"Variable\\":\\"$.testResult\\",\\"StringEquals\\":\\"N\\",\\"Next\\":\\"log-test-result\\"},{\\"Variable\\":\\"$.testResult\\",\\"StringEquals\\":\\"P\\",\\"Next\\":\\"forward-test-result\\"}]},\\"log-test-result\\":{\\"End\\":true,\\"Type\\":\\"Task\\",\\"ResultPath\\":\\"$.logTestResult\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem\\",\\"Parameters\\":{\\"Item\\":{\\"tenant\\":{\\"S.$\\":\\"$.tenant\\"},\\"dateTime\\":{\\"S.$\\":\\"$$.State.EnteredTime\\"},\\"group\\":{\\"S.$\\":\\"$.poolName\\"},\\"state\\":{\\"S\\":\\"TEST_RESULT\\"},\\"testResult\\":{\\"S.$\\":\\"$.testResult\\"}},\\"TableName\\":\\"",
              Object {
                "Ref": "activitylog4548CCD2",
              },
              "\\"}},\\"log-test-result-forwarded\\":{\\"Next\\":\\"log-test-result\\",\\"Type\\":\\"Task\\",\\"ResultPath\\":\\"$.logTestResult\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem\\",\\"Parameters\\":{\\"Item\\":{\\"tenant\\":{\\"S.$\\":\\"$.tenant\\"},\\"dateTime\\":{\\"S.$\\":\\"$$.State.EnteredTime\\"},\\"pool\\":{\\"S.$\\":\\"$.poolName\\"},\\"state\\":{\\"S\\":\\"TEST_RESULT_FORWARDED\\"},\\"campaignId\\":{\\"S.$\\":\\"$.campaignId\\"},\\"campaignName\\":{\\"S.$\\":\\"$.campaignName\\"},\\"pinpointApplicationId\\":{\\"S.$\\":\\"$.pinpointApplicationId\\"},\\"targetSegment\\":{\\"S.$\\":\\"$.segmentId\\"}},\\"TableName\\":\\"",
              Object {
                "Ref": "activitylog4548CCD2",
              },
              "\\"}},\\"forward-test-result\\":{\\"Next\\":\\"log-test-result-forwarded\\",\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Type\\":\\"Task\\",\\"OutputPath\\":\\"$.Payload\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke\\",\\"Parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "testresultprocessingforwardtestresultfunctionCD28DA83",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":{\\"tenant.$\\":\\"$.pool.Item.tenant.S\\",\\"pinpointApplicationId.$\\":\\"$.pool.Item.pinpointApplicationId.S\\",\\"segmentId.$\\":\\"$.pool.Item.segmentId.S\\",\\"poolName.$\\":\\"$.pool.Item.poolName.S\\",\\"testResult.$\\":\\"$.testResult\\"}}}},\\"TimeoutSeconds\\":300}",
            ],
          ],
        },
        "LoggingConfiguration": Object {
          "Destinations": Array [
            Object {
              "CloudWatchLogsLogGroup": Object {
                "LogGroupArn": Object {
                  "Fn::GetAtt": Array [
                    "testresultprocessingtestresultprocessingloggroupFFEE3D3D",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ALL",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "testresultprocessingprocesstestresultRoleC4E204A9",
            "Arn",
          ],
        },
        "TracingConfiguration": Object {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "testresultprocessingprocesstestresultRoleC4E204A9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "states.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testresultprocessingprocesstestresultRoleDefaultPolicy7E3A9E8E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "dynamodb:GetItem",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    Object {
                      "Ref": "testpool476DCF5C",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    Object {
                      "Ref": "activitylog4548CCD2",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testresultprocessingforwardtestresultfunctionCD28DA83",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "activitylog4548CCD2",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "dynamodb:GetItem",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testpool476DCF5C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testresultprocessingprocesstestresultRoleDefaultPolicy7E3A9E8E",
        "Roles": Array [
          Object {
            "Ref": "testresultprocessingprocesstestresultRoleC4E204A9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testresultprocessingtestresultprocessingloggroupFFEE3D3D": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 1,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;
